/**
 * Form
 */
form {
    margin: 1rem 0;

    // Normally, each field is in a paragraph
    p {
        margin: .5rem 0;

        &:first-child {
            margin-top: 0;
        }
        &:last-child {
            margin-bottom: 0;
        }
    }
}

// Buttons of the form
.form-buttons {
    text-align: right;
    clear: both;

    &:before {
        content: "";
        height: 1rem;
    }

    .button {
        margin-left: 1rem;
    }
}

// label
label {
    display: inline-block;
    vertical-align: top;
    padding: .5rem 0;

    font-weight: bold;
    text-align: right;
}

// Input text
input[type=text],
input[type=password],
input[type=email],
textarea {
    display: inline-block;
    vertical-align: top;
    padding: .45rem;
    margin: 0;

    font-size: 1rem;
    color: $global-text-color;

    outline: none;
    border: solid 0 $component-border-color;
    @include border-radius($component-border-radius);

    @include box-shadow(0, 0, 5px, rgb(160, 160, 160), true);

    // Change the border color on focus
    &:focus {
        @include box-shadow(0, 0, 5px, rgb(30, 30, 30), true);
    }

    // Disabled field
    &:disabled {
        background: #f5f5f5;
        color: #444;
        opacity: 1;
        border: solid 1px #ccc;

        @include box-shadow(none);
    }

    // Change the background if the field is invalid
    /*
    &:invalid {
        @include box-shadow(0, 0, 5px, rgb(255, 0, 0), true);
        background: rgba(255, 0, 0, .1);
    }
    */
}

// Select
select {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;

    display: inline-block;
    vertical-align: top;
    padding: .45rem;
    margin: 0;

    font-size: 1rem;
    color: $global-text-color;

    outline: none;
    border: solid 1px $component-border-color;
    @include border-radius($component-border-radius);

    @include box-shadow(none);

    //@include background-gradient-vertical(#f9f9f9, #eee);
    background: 
        url(../images/form/select-arrow.svg) no-repeat right center,
        -webkit-gradient(linear, left top, left bottom, color-stop(0%, #f9f9f9), color-stop(100%, #eee));
    background: 
        url(../images/form/select-arrow.svg) no-repeat right center,
        -webkit-linear-gradient(top, #f9f9f9 0%, #eee 100%);
    background: 
        url(../images/form/select-arrow.svg) no-repeat right center,
        linear-gradient(to bottom, #f9f9f9 0%, #eee 100%);


    // Change the border color on focus
    &:focus {
    }

    // Disabled field
    &:disabled {
        color: #444;
        opacity: 1;
        border: solid 1px #ccc;
    }


}

// Submit button
input[type=submit] {
    @extend .button;
}

// Field note
.form-field-note {
    display: inline-block;
    vertical-align: top;
    padding: .5rem 0 0 0;
    margin: 0;
    font-size: .8rem;
    line-height: 1.1em;
}

// Errors
.form-errors {
    list-style: disc;
    background: $global-panel-error-background;
    color: #fff;
    margin-top: 1rem;
    padding: 1rem 1rem 1rem 2rem;

    @include border-radius($component-border-radius);

    li {
        margin-bottom: .5em;

        &:last-child {
            margin-bottom: 0;
        }
    }
}

// Field separator
@mixin form-add-separator($column-count, $column-total, $gutter) {
    &:after {
        display: block;
        clear: both;
        content: "";
        background: #eee;
        height: 1px;

        @include column($column-count, $column-total, $gutter);
        margin-left: 0;
        margin-top: 1rem;
        margin-bottom: 1rem;
    }
}
